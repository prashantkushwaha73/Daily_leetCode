**** 45. Jump Game II ****

class Solution {
public:
    int jump(vector<int>& nums) {
        int posi=nums.size()-1,ans=0;
        while(posi!=0){
            for(int i=0;i<posi;i++){
                if(i+nums[i]>=posi){
                    ans++;
                    posi=i;
                    break;
                }
            }
        }
        return ans;
    }
};


**** 2306. Naming a Company ( 9/2/23 ) ****

class Solution {
public:
    long long distinctNames(vector<string>& ideas) {
       unordered_map<string,bool> hm;
        for(int i=0;i<ideas.size();i++){      
             hm[ideas[i]] = true;
        }
        
        vector<vector<long long >> dict(26,vector<long long >(26,0)); 
        
        for(int i =0;i<ideas.size();i++){
            
            string word = ideas[i].substr(1);
            
            int in = ideas[i][0]-'a';
            
              for(int j = 0;j<26;j++){
                  char y = ('a'+j);
                  string temp = y + word;
                  
                  if(hm.count(temp)==0){
                      dict[in][j] += 1;
                  }   
              }}
        
        long long count = 0;
        for(int i=0;i<26;i++){
            
              for(int j = 0;j<26;j++){
                  if(i==j)continue;
                  if(dict[i][j]>0){
                      count += (dict[j][i]*dict[i][j]);   
                  }
              }  
        }
        
        return count;
   }
};

************************************************************************************************************************************************
**** 1523. Count Odd Numbers in an Interval Range ( 13/2/23 ) ****
class Solution {
public:
    int countOdds(int low, int high) {
        
        if(low==high){
            if(low%2!=0){
                return 1;
            }
            else{
                return 0;
            }
        }
        if(low==0 && high%2!=0){
            return (high+1)/2;
        }
        else if(low==0 && high%2==0){
            return high/2;
        }
    
        if((low%2!=0 && high%2!=0)){
            return (high-low)/2+1;
        }
        else if(low%2==0 && high%2==0){
            return (high-low)/2;
        }
        else{
            return (high-low+1)/2;
        }
    }
};

************************************************************************************************
**** Add Binary ( 14/2/23 ) ****
class Solution {
public:
    string addBinary(string a, string b) {
        int i=a.size()-1;
        int j=b.size()-1;
        string ans="";
        int rem=0;
        while(i>=0 || j>=0 || rem){
            if(i>=0){
                rem+=a[i]-'0';
                i--;
            }
            if(j>=0){
                rem+=b[j]-'0';
                j--;
            }
            ans+=(rem%2+'0');
            rem=rem/2;
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};

**************************************************************************************
**** 989. Add to Array-Form of Integer ( 15/2/23 ) ****
class Solution {
public:
    vector<int> addToArrayForm(vector<int>& num, int k) {
        vector<int> ans;
        int it=num.size()-1,carry=0;
        int sum=0;
        while(it>=0 || k!=0 || carry!=0){
            if(it>=0){
                sum+=num[it];
                it--;
            }
            if(k!=0){
                sum+=(k%10);
                k/=10;
            }
            sum+=carry;
            ans.push_back(sum%10);
            carry=sum/10;
            sum=0;
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};

*********************************************************************************************************
