***************************************************************************************************************************************
**** Score of a String ( 01/06/24 ) ****

class Solution {
public:
    int scoreOfString(string s) {
        int ans = 0;
        for(int i=1;i<s.size();i++){
           int a = s[i]; int b = s[i-1];
             if(a>b){
                ans += a-b;
             }
             else{
                ans += b-a;
             }
        }
        return ans;
    }
};

********************************************************************************************************************************************
**** Reverse String ( 02/06/24 ) ****

class Solution {
public:
    void reverseString(vector<char>& s) {
        int size=s.size();
        int b=0 , e=size-1;
        while(b<e){
            swap(s[b],s[e]);
            b++;
            e--;
        }
    }
};

*************************************************************************************************************************************************
**** Append Characters to String to Make Subsequence ( 03/06/24 ) ****

class Solution {
public:
    int appendCharacters(string s, string t) {
        int i=0,j=0;
        while(i<s.size() && j<t.size()){
            if(s[i]==t[j]){
                i++;
                j++;
            }
            else{
                i++;
            }
        }
        return t.size()-j;
    }
};

****************************************************************************************************************************************************
**** Longest Palindrome ( 04/06/24 ) ****

class Solution {
public:
    int longestPalindrome(string s) {
        int ans = 0;
        unordered_map<char,int> m;;
        for(int i=0;i<s.size();i++){
            m[s[i]]++;
        }
        priority_queue<int> pq;
        for(auto i:m){
            if(i.second%2){
                pq.push(i.second);
            }
            else{
                ans+=i.second;
            }
        }
        if(!pq.empty()){
             ans+=pq.top();
        pq.pop();
        }
        while(!pq.empty()){
            ans += pq.top()-1;
            pq.pop();
        }
       return ans;
    }
};

************************************************************************************************************************************************
