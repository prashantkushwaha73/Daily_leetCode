*****************************************************************************
**** 557. Reverse Words in a String III ( 01/10/23 ) ****

class Solution {
public:

void reverse(string& str)
{
    int n = str.length();
 
    // Swap character starting from two
    // corners
    for (int i = 0; i < n / 2; i++)
        swap(str[i], str[n - i - 1]);
}

    string reverseWords(string s) {
        string str="";
        string ans="";
        string r;
        for(int i=0;i<s.size();i++){
           if(s[i]==' '){
         reverse(str);
           ans = ans + str;
           ans.push_back(' ');
           str="";
           }
           else{
               str.push_back(s[i]);
           }
        }
         reverse(str);
         ans = ans + str;
         
         return ans;
    }
};

*****************************************************************************************************
**** 2038. Remove Colored Pieces if Both Neighbors are the Same Color ( 02/10/23 ) ****

class Solution {
public:
   
    bool solve(string& s,bool& turn,int& a,int& b,int& size){
        if(turn){
              if(a >= size-1){
                  return !turn;
              }
        }
        else{
            if(b >= size-1){
                return !turn;
            }
        }
        
        while(1){
            if(turn){
                if(s[a-1]=='A' && s[a]=='A' && s[a+1]=='A'){
                    a+=1;
                    if(turn){
                        turn = false;
                    }
                    else{
                        turn = true;
                    }
                    return solve(s,turn,a,b,size);
                }
                else{
                  a+=1;
                  
                  return solve(s,turn,a,b,size);
                }
            }
            else{
               if(s[b-1]=='B' && s[b]=='B' && s[b+1]=='B'){
                    b+=1;
                    if(turn){
                        turn = false;
                    }
                    else{
                        turn = true;
                    }
                    return solve(s,turn,a,b,size);
                }
                else{
                  b+=1;
                  return solve(s,turn,a,b,size);
                }
            }
        }
        return !turn;
    }

    bool winnerOfGame(string colors) {
        bool turn = true;
        int a =1,b=1,size=colors.size();
        return solve(colors,turn,a,b,size);
    }
};

***********************************************************************************************************
