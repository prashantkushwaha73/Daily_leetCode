**********************************************************************************************************************
**** 1662. Check If Two String Arrays are Equivalent ( 01/12/23 ) ****

class Solution {
public:
    bool arrayStringsAreEqual(vector<string>& word1, vector<string>& word2) {
        string s1="";
        for(int i=0;i<word1.size();i++){
            s1+=word1[i];
        }
        string s2="";
        for(int i=0;i<word2.size();i++){
            s2+=word2[i];
        }
        return (s1==s2);
    }
};

***************************************************************************************************************************
**** 1160. Find Words That Can Be Formed by Characters ( 02/12/23 ) ****

class Solution {
public:
    int countCharacters(vector<string>& words, string chars) {
       unordered_map<char,int> m;
       for(int i=0;i<chars.size();i++){
           m[chars[i]]++;
       } 
       unordered_map<char,int> count;
       int ans = 0;
       bool flag;
       for(int i=0;i<words.size();i++){
           flag = true;
           for(int j=0;j<words[i].size();j++){
               count[words[i][j]]++;
               if(count[words[i][j]] > m[words[i][j]]){
                   flag = false;
                   break;
               }
           }
           if(flag){
               ans+=words[i].size();
           }
           count.clear();
       }
       return ans;
    }
};

****************************************************************************************************************
****

class Solution {
public:
    int minTimeToVisitAllPoints(vector<vector<int>>& points) {
        int ans = 0,i,j;
        for(int p=1;p<points.size();p++){
               i = abs(points[p][0]-points[p-1][0]); j = abs(points[p][1]-points[p-1][1]);
               ans += min(i,j);
               ans += max(i,j)-min(i,j);
        }
        return ans;
    }
};

********************************************************************************************************************
**** 2264. Largest 3-Same-Digit Number in String ( 04/12/23 ) ****

class Solution {
public:
    string largestGoodInteger(string num) {
        int maxi = INT_MIN;
        string ans="";
        int i=0,j=2;
        while(j<num.size()){
            if(num[i]==num[i+1] && num[i]==num[j] && num[i]>maxi){
                 maxi = num[i];
                 ans = num.substr(i,j-i+1);
            }
            else{
                i++; j++;
            }
        }
        return ans;
    }
};

****************************************************************************************************************************
