**********************************************************************************
**** 338. Counting Bits ( 01/09/23 ) ***

class Solution {
public:
   
   int solve(int n){
       int count = 0;
       while(n){
           if(n%2){
               count++;
           }
           n/=2;
       }
       return count;
   }

    vector<int> countBits(int n) {
        vector<int> ans;
        for(int i=0;i<=n;i++){
            ans.push_back(solve(i));
        }
        return ans;
    }
};

***************************************************************************************
**** 62. Unique Paths ( 03/09/23 ) ****

class Solution {
public:
  
   int solve(int x,int y,int m,int n,vector<vector<int>>& dp){
       if(dp[x][y] != -1){
           return dp[x][y];
       }
       dp[x][y] = 0;
       ///////// right
       if(y+1 < n){
           dp[x][y] += solve(x,y+1,m,n,dp);
       }
       ///////// down
       if(x+1 < m){
            dp[x][y] += solve(x+1,y,m,n,dp);
       }
       return dp[x][y];
   }

    int uniquePaths(int m, int n) {
        int ans = 0;
        vector<vector<int>> dp;
        vector<int> v;
        for(int j=0;j<n;j++){
            v.push_back(-1);
        }
        for(int i=0;i<m;i++){
            dp.push_back(v);
        }
        dp[m-1][n-1] = 1;
        return solve(0,0,m,n,dp);
    }
};

*************************************************************************************************
