*****************************************************************************************************************
**** 2966. Divide Array Into Arrays With Max Difference ( 01/02/24 ) ****

class Solution {
public:
    vector<vector<int>> divideArray(vector<int>& nums, int k) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> ans;
        vector<vector<int>> r;
        vector<int> v;
        int i = 0;
        while(i<nums.size()){
              while(v.size()<3){
                   if(v.size()){
                       if(nums[i]-v[0]>k){
                           return r;
                       }
                       else{
                           v.push_back(nums[i]);
                       }
                   }
                   else{
                       v.push_back(nums[i]);
                   }
                   i++;
              }
              ans.push_back(v);
              v.clear();
        }
        return ans;
    }
};

********************************************************************************************************************************************************
**** 1291. Sequential Digits ( 02/02/24 ) ****

class Solution {
public:
    vector<int> sequentialDigits(int low, int high) {
        int v,p;
        vector<int> ans;
        for(int i=1;i<9;i++){
            v=i;
            p=i;
            while(1){
               if(v>high){
                   break;
               }
               else if(v>=low && v<=high){
                   ans.push_back(v);
               }
               p++;
               if(p>9){
                   break;
               }
               v = (v*10)+p;
            }
        }
        sort(ans.begin(),ans.end());
        return ans;
    }
};

***********************************************************************************************************************
**** 387. First Unique Character in a String ( 05/02/24 ) ****

class Solution {
public:
    int firstUniqChar(string s) {
        vector<int> v(26,0);
        for(int i=0;i<s.size();i++){
            v[s[i]-'a']++;
        }
        for(int i=0;i<s.size();i++){
            if(v[s[i]-'a']==1){
                return i;
            }
        }
        return -1;
    }
};

****************************************************************************************************************************
